# coding: utf-8

"""
    Plane API

    API documentation for my specific app

    The version of the OpenAPI document: 1.0.0 (1.0.0)
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from plane.models.issue_expand import IssueExpand  # noqa: E501

class TestIssueExpand(unittest.TestCase):
    """IssueExpand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IssueExpand:
        """Test IssueExpand
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IssueExpand`
        """
        model = IssueExpand()  # noqa: E501
        if include_optional:
            return IssueExpand(
                archived_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                assignees = [
                    plane.models.user_lite.UserLite(
                        avatar = '', 
                        avatar_url = '', 
                        display_name = '', 
                        email = '', 
                        first_name = '', 
                        id = '', 
                        last_name = '', )
                    ],
                completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                cycle = plane.models.cycle_lite.CycleLite(
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    logo_props = null, 
                    name = '', 
                    owned_by = '', 
                    progress_snapshot = null, 
                    project = '', 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    timezone = 'Africa/Abidjan', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    version = -2147483648, 
                    view_props = null, 
                    workspace = '', ),
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = None,
                description_binary = 'YQ==',
                description_html = '',
                description_stripped = '',
                estimate_point = '',
                external_id = '',
                external_source = '',
                id = '',
                is_draft = True,
                labels = [
                    plane.models.label_lite.LabelLite(
                        color = '', 
                        id = '', 
                        name = '', )
                    ],
                module = plane.models.module_lite.ModuleLite(
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    description_html = null, 
                    description_text = null, 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    lead = '', 
                    logo_props = null, 
                    members = [
                        ''
                        ], 
                    name = '', 
                    project = '', 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    status = 'backlog', 
                    target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    view_props = null, 
                    workspace = '', ),
                name = '',
                parent = '',
                point = 0,
                priority = 'urgent',
                project = '',
                sequence_id = -2147483648,
                sort_order = 1.337,
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                state = plane.models.state_lite.StateLite(
                    color = '', 
                    group = null, 
                    id = '', 
                    name = '', ),
                target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                type = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_by = '',
                workspace = ''
            )
        else:
            return IssueExpand(
                assignees = [
                    plane.models.user_lite.UserLite(
                        avatar = '', 
                        avatar_url = '', 
                        display_name = '', 
                        email = '', 
                        first_name = '', 
                        id = '', 
                        last_name = '', )
                    ],
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                cycle = plane.models.cycle_lite.CycleLite(
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    logo_props = null, 
                    name = '', 
                    owned_by = '', 
                    progress_snapshot = null, 
                    project = '', 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    timezone = 'Africa/Abidjan', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    version = -2147483648, 
                    view_props = null, 
                    workspace = '', ),
                description_binary = 'YQ==',
                id = '',
                labels = [
                    plane.models.label_lite.LabelLite(
                        color = '', 
                        id = '', 
                        name = '', )
                    ],
                module = plane.models.module_lite.ModuleLite(
                    archived_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = '', 
                    description_html = null, 
                    description_text = null, 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    lead = '', 
                    logo_props = null, 
                    members = [
                        ''
                        ], 
                    name = '', 
                    project = '', 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    status = 'backlog', 
                    target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    view_props = null, 
                    workspace = '', ),
                name = '',
                project = '',
                state = plane.models.state_lite.StateLite(
                    color = '', 
                    group = null, 
                    id = '', 
                    name = '', ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_by = '',
                workspace = '',
        )
        """

    def testIssueExpand(self):
        """Test IssueExpand"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
