# coding: utf-8

"""
    Plane API

    API documentation for my specific app

    The version of the OpenAPI document: 1.0.0 (1.0.0)
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from plane.models.inbox_issue import InboxIssue  # noqa: E501

class TestInboxIssue(unittest.TestCase):
    """InboxIssue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InboxIssue:
        """Test InboxIssue
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InboxIssue`
        """
        model = InboxIssue()  # noqa: E501
        if include_optional:
            return InboxIssue(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                duplicate_to = '',
                external_id = '',
                external_source = '',
                id = '',
                inbox = '',
                issue = '',
                issue_detail = plane.models.issue_expand.IssueExpand(
                    archived_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    assignees = [
                        plane.models.user_lite.UserLite(
                            avatar = '', 
                            avatar_url = '', 
                            display_name = '', 
                            email = '', 
                            first_name = '', 
                            id = '', 
                            last_name = '', )
                        ], 
                    completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    cycle = null, 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = null, 
                    description_binary = 'YQ==', 
                    description_html = '', 
                    description_stripped = '', 
                    estimate_point = '', 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    is_draft = True, 
                    labels = [
                        plane.models.label_lite.LabelLite(
                            color = '', 
                            id = '', 
                            name = '', )
                        ], 
                    module = null, 
                    name = '', 
                    parent = '', 
                    point = 0, 
                    priority = null, 
                    project = '', 
                    sequence_id = -2147483648, 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    state = null, 
                    target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    type = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    workspace = '', ),
                project = '',
                snoozed_till = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                source = '',
                status = -2,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_by = '',
                workspace = ''
            )
        else:
            return InboxIssue(
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                id = '',
                inbox = '',
                issue = '',
                issue_detail = plane.models.issue_expand.IssueExpand(
                    archived_at = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    assignees = [
                        plane.models.user_lite.UserLite(
                            avatar = '', 
                            avatar_url = '', 
                            display_name = '', 
                            email = '', 
                            first_name = '', 
                            id = '', 
                            last_name = '', )
                        ], 
                    completed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    cycle = null, 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    description = null, 
                    description_binary = 'YQ==', 
                    description_html = '', 
                    description_stripped = '', 
                    estimate_point = '', 
                    external_id = '', 
                    external_source = '', 
                    id = '', 
                    is_draft = True, 
                    labels = [
                        plane.models.label_lite.LabelLite(
                            color = '', 
                            id = '', 
                            name = '', )
                        ], 
                    module = null, 
                    name = '', 
                    parent = '', 
                    point = 0, 
                    priority = null, 
                    project = '', 
                    sequence_id = -2147483648, 
                    sort_order = 1.337, 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    state = null, 
                    target_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    type = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_by = '', 
                    workspace = '', ),
                project = '',
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_by = '',
                workspace = '',
        )
        """

    def testInboxIssue(self):
        """Test InboxIssue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
